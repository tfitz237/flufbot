{"version":3,"sources":["../Bot.js"],"names":["Bot","token","console","log","commands","connect","client","Client","autoReconnect","login","then","msg","catch","addListeners","users","on","message","checkMessage","author","username","updateUser","found","checkCommands","checkNonCommands","from","content","prefix","substring","mentions","exists","id","i","isCommand","containsCommand","removeCommands","private","channel","dmChannel","async","rtn","val","sendMessage","contains","toLowerCase","length","command","test","layer","subcommand","split","message2","replace","trim","user","lastMessage","cont","stri","indexOf","search"],"mappings":"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","file":"Bot.js","sourcesContent":["import Discord from 'discord.js';\r\nimport scripts from './scripts';\r\nclass Bot {\r\n    constructor (token) {\r\n        console.log('Booting up bot...');\r\n        this.commands = scripts(this);\r\n        this.connect(token);\r\n    }\r\n    connect(token) {\r\n        this.client = new Discord.Client({autoReconnect: true});\r\n        this.client.login(token)\r\n\t\t\t.then((msg) => console.log('Logged in.'))\r\n\t\t\t.catch((msg) => console.log('error', msg));\r\n\t    this.addListeners();\r\n\t    this.users = {};\r\n    }\r\n    addListeners() {\r\n        this.client.on('error', message => console.log(message));\r\n        this.client.on('ready',()  => {\r\n            //this.commands.playYoutube.connectAudio(this);\r\n            console.log('Bot connected');\r\n        });\r\n        this.client.on('message', message => this.checkMessage(message));\r\n    }\r\n    checkMessage(message) {\r\n        if(message.author.username === \"flufbot\") return;\r\n        this.updateUser(message.author, message);\r\n        let found = this.checkCommands(message);\r\n        if (!found) this.checkNonCommands(message);\r\n    }\r\n    checkCommands(msg) {\r\n        let from = msg.author.username;\r\n        let message = msg.content;\r\n        let prefix = false;\r\n        if(message.substring(0,1) === \"!\") {\r\n            prefix = \"!\";\r\n        }\r\n        if (msg.mentions.users.exists('username', 'flufbot')) {\r\n            prefix = this.id + ' ';\r\n        }\r\n        if (prefix) {\r\n            let found = false;\r\n            for(let i in this.commands) {\r\n                if(this.commands[i].isCommand && this.containsCommand(this.commands[i].commands, message, prefix)) {\r\n                    found = true;\r\n                    message = this.removeCommands(this.commands[i].commands, message, prefix);\r\n                    if(this.commands[i].private) {\r\n                        let channel = msg.author.dmChannel;\r\n                        if (channel) {\r\n                            if (this.commands[i].async) {\r\n                                this.commands[i].rtn(from, message, msg).then(function(val) {\r\n                                    msg.author.dmChannel.sendMessage(val);\r\n                                })\r\n                            } else {\r\n                                msg.author.dmChannel.sendMessage(this.commands[i].rtn(from, message, msg));\r\n                            }\r\n                        } else {\r\n                            msg.channel.sendMessage('Sorry, I had trouble DMing you...');\r\n                        }\r\n                        return true;\r\n                    } else {\r\n                        if (this.commands[i].async) {\r\n                            this.commands[i].rtn(from, message, msg).then(function(val) {\r\n                                msg.channel.sendMessage(val);\r\n                            })\r\n                        } else {\r\n                            msg.channel.sendMessage(this.commands[i].rtn(from, message, msg));\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    checkNonCommands(msg) {\r\n        let from = msg.author.username;\r\n        let message = msg.content;\r\n        for (let i in this.commands) {\r\n            if(!this.commands[i].isCommand) {\r\n                if(contains(this.commands[i].commands, message)) {\r\n                    message = this.removeCommands(this.commands[i], message);\r\n                    if(this.commands[i].private) {\r\n                        msg.author.dmChannel.sendMessage(this.commands[i].rtn(from,message));\r\n                    } else {\r\n                        msg.channel.sendMessage(this.commands[i].rtn(from,message));\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    containsCommand(commands, message, prefix) {\r\n        message = message.toLowerCase();\r\n        for(let i = 0; i < commands.length; i++) {\r\n            let command = commands[i].toLowerCase();\r\n            let test = message.substring(prefix.length, prefix.length  + commands[i].length);\r\n            if (command === test) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    getSubCommand(message, layer) {\r\n        layer = layer - 1 || 0;\r\n        message = message.toLowerCase();\r\n        let subcommand = message.split(' ');\r\n        if (subcommand.length > layer) {\r\n            return subcommand[layer];\r\n        }\r\n        return false;\r\n    }\r\n    removeCommands(commands, message, prefix) {\r\n        prefix = prefix || '';\r\n\tlet message2 = message.toLowerCase();\r\n        for (let i = 0; i < commands.length; i++) {\r\n            let command = commands[i].toLowerCase();\r\n            let test = message2.substring(prefix.length, prefix.length  + commands[i].length);\r\n            if (command === test) {\r\n                message = message.replace(prefix + command, '');\r\n                break;\r\n            }\r\n\r\n        }\r\n        message = message.trim();\r\n        return message;\r\n    }\r\n    updateUser(user, message) {\r\n        user.lastMessage = message;\r\n        this.users[user.id] = user;\r\n    }\r\n    get id() {\r\n        return '<@' + this.client.user.id + '>';\r\n    }\r\n\r\n}\r\n\r\nfunction contains(cont, stri) {\r\n    stri = stri.toLowerCase();\r\n    if (!cont) {\r\n        return false;\r\n    }\r\n    if(typeof cont === \"string\") {\r\n        return stri.indexOf(cont.toLowerCase()) !== -1;\r\n    }\r\n    if(cont[0] === \"regex\") {\r\n        return stri.search(cont[1]) !== -1;\r\n    }\r\n    for(let i = 0; i < cont.length; i++) {\r\n        if (stri.indexOf(cont[i].toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default Bot;"]}