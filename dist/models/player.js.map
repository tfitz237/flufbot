{"version":3,"sources":["../../models/player.js"],"names":["Player","player","competitiveGameStats","quickPlayGameStats","rank","competitive","quickPlay","constructPlayer","constructStats","obj","urlName","name","accounts","displayName","level","portrait","stats","games","game","ratio","Math","round","games_won","games_lost","kda","combat","eliminations","deaths","best","streak","kill_streak_best","eliminations_most_in_game","healing","healing_done_most_in_game","rating","determineSkillRating","type","goodHealing","goodElims","goodStreak","embed","RichEmbed","setAuthor","setURL","setThumbnail","addField","generateStats"],"mappings":"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","file":"player.js","sourcesContent":["import Discord from 'discord.js';\r\nexport default class Player {\r\n\r\n    constructor(player, competitiveGameStats, quickPlayGameStats, rank) {\r\n        this.player = {};\r\n        this.competitive = {};\r\n        this.quickPlay = {};\r\n        this.constructPlayer(this.player, player);\r\n        this.constructStats(this.competitive, competitiveGameStats, rank);\r\n        this.constructStats(this.quickPlay, quickPlayGameStats);\r\n    }\r\n\r\n    constructPlayer(obj, player) {\r\n        obj.urlName = player.name;\r\n        obj.name = player.accounts[0].displayName;\r\n        obj.level = player.accounts[0].level;\r\n        obj.portrait = player.accounts[0].portrait;\r\n    }\r\n\r\n    constructStats(obj, stats, rank) {\r\n        obj.games = stats.game;\r\n\r\n        obj.games.ratio = Math.round(obj.games.games_won / obj.games.games_lost * 100) / 100 || 'N/A';\r\n        obj.stats = {};\r\n        obj.stats.rank = rank || 'N/A';\r\n        obj.stats.kda = Math.round(stats.combat.eliminations / stats.combat.deaths * 100) / 100;\r\n        obj.stats.best = {};\r\n        obj.stats.best.streak = stats.best.kill_streak_best;\r\n        obj.stats.best.eliminations = stats.best.eliminations_most_in_game;\r\n        obj.stats.best.healing = stats.best.healing_done_most_in_game;\r\n\r\n        obj.rating = this.determineSkillRating(obj);\r\n    }\r\n\r\n    determineSkillRating(type) {\r\n        const goodHealing = type.stats.best.healing / 10000;\r\n        const goodElims = type.stats.best.eliminations / 20;\r\n        const goodStreak = type.stats.best.streak / 20;\r\n        const kda = type.stats.kda;\r\n        const ratio = type.stats.ratio || 0;\r\n\r\n        const rating = Math.round((goodHealing + goodElims + goodStreak + ratio));\r\n\r\n        return rating;\r\n    }\r\n\r\n    toEmbed() {\r\n        const embed = new Discord.RichEmbed()\r\n            .setAuthor(this.player.name, this.player.portrait)\r\n            .setURL('https://www.overbuff.com/players/pc/' + this.player.urlName)\r\n            .setThumbnail(this.player.portrait)\r\n            .addField('Competitive', this.generateStats(this.competitive))\r\n            .addField('QuickPlay', this.generateStats(this.quickPlay));\r\n        return {embed};\r\n    }\r\n\r\n    generateStats(obj) {\r\n        return        `\r\n                       Rating: ${obj.rating}\r\n                       Competitive Rank: ${obj.stats.rank}\r\n                       Match Ratio: ${obj.games.ratio}\r\n                       KDA: ${obj.stats.kda}\r\n                       Best Streak: ${obj.stats.best.streak}\r\n                       Most Eliminations: ${obj.stats.best.eliminations}\r\n                       Most Healing: ${obj.stats.best.healing}\r\n                       `;\r\n    }\r\n}"]}