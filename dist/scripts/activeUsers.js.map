{"version":3,"sources":["../../scripts/activeUsers.js"],"names":["asdf","bot","getActiveUsers","ping","users","rtn","i","checkIfActive","client","user","push","id","username","join","name","commands","isCommand","private","get","lastMessage","createdTimestamp","Date","now","away","from","message","setInactiveUser","replace","split","setAway"],"mappings":";;AAAA;;;;;;;;;;;AAWA;AACA,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACf,aAASC,cAAT,CAAwBD,GAAxB,EAA6BE,IAA7B,EAAmC;AAC/B,YAAIC,QAAQH,IAAIG,KAAhB;AACA,YAAIC,MAAM,EAAV;AACA,aAAK,IAAIC,CAAT,IAAcF,KAAd,EAAqB;AACjB,gBAAGG,cAAcH,MAAME,CAAN,CAAd,KAA2BF,MAAME,CAAN,MAAaL,IAAIO,MAAJ,CAAWC,IAAtD,EAA4D;AACxDJ,oBAAIK,IAAJ,CAASP,OAAO,OAAOC,MAAME,CAAN,EAASK,EAAhB,GAAqB,GAA5B,GAAkCP,MAAME,CAAN,EAASM,QAApD;AACH;AACDP,gBAAIQ,IAAJ,CAAS,IAAT;AACH;AACD,eAAOR,GAAP;AACH;;AAED,WAAO;AACHS,cAAM,aADH;AAEHC,kBAAU,CAAC,YAAD,EAAe,cAAf,EAA+B,aAA/B,EAA8C,QAA9C,EAAwD,WAAxD,EAAqE,UAArE,EAAiF,WAAjF,EAA8F,QAA9F,CAFP;AAGHC,mBAAW,IAHR;AAIHC,iBAAS,KAJN;AAKHZ,aAAK;AAAA,mBAAM,mCAAmCH,eAAeD,GAAf,EAAoB,KAApB,CAAzC;AAAA,SALF;AAMHiB,aAAK,aAACjB,GAAD,EAAME,IAAN,EAAe;AAAC,mBAAOD,eAAeD,GAAf,EAAoBE,IAApB,CAAP;AAAiC;AANnD,KAAP;AAQH;;AAED,SAASI,aAAT,CAAuBE,IAAvB,EAA6B;AACzB,QAAIA,KAAKU,WAAL,CAAiBC,gBAAjB,GAAoC,OAApC,IAA+CC,KAAKC,GAAL,EAAnD,EAA+D;AAC3D,eAAO,IAAP;AACH;AACD,WAAO,KAAP;AACH;;AAED,IAAIC,OAAO,SAAPA,IAAO,CAAStB,GAAT,EAAc;AACrB,WAAO;AACHa,cAAM,MADH;AAEHC,kBAAU,CAAC,MAAD,EAAS,UAAT,CAFP;AAGHC,mBAAW,IAHR;AAIHC,iBAAS,KAJN;AAKHZ,aAAK,aAACmB,IAAD,EAAOC,OAAP,EAAmB;AACpBxB,gBAAIyB,eAAJ,CAAoBF,IAApB;AACAC,sBAAUA,QAAQE,OAAR,CAAgB,GAAhB,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,UAAhC,EAA2C,EAA3C,EAA+CA,OAA/C,CAAuD,SAAvD,EAAiE,EAAjE,CAAV;AACA,gBAAIJ,OAAOE,QAAQG,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAX;AACA3B,gBAAI4B,OAAJ,CAAYL,IAAZ,EAAkBD,IAAlB;AACA,mBAAOC,OAAO,eAAd;AACH;AAXE,KAAP;AAaH,CAdD","file":"activeUsers.js","sourcesContent":["/* return format:\r\nexports.name = function(bot) {\r\n    return {\r\n        name: '__NAME__',\r\n        commands: ['__COMMAND1__', '__COMMAND2__'],\r\n        isCommand: true,\r\n        private: false\r\n        rtn: function(from, to, message) { return 'blah';}\r\n    }\r\n}\r\n*/\r\n//exports.activeUsers =\r\nfunction asdf(bot) {\r\n    function getActiveUsers(bot, ping) {\r\n        let users = bot.users;\r\n        let rtn = [];\r\n        for (let i in users) {\r\n            if(checkIfActive(users[i]) && users[i] !== bot.client.user) {\r\n                rtn.push(ping ? '<@' + users[i].id + '>' : users[i].username);\r\n            }\r\n            rtn.join(', ');\r\n        }\r\n        return rtn;\r\n    }\r\n\r\n    return {\r\n        name: 'activeUsers',\r\n        commands: [\"who's here\", \"who's active\", \"activeUsers\", \"active\", \"whos here\", \"rollcall\", \"roll call\", \"online\"],\r\n        isCommand: true,\r\n        private: false,\r\n        rtn: () => 'The current active users are: ' + getActiveUsers(bot, false),\r\n        get: (bot, ping) => {return getActiveUsers(bot, ping)}\r\n    };\r\n};\r\n\r\nfunction checkIfActive(user) {\r\n    if (user.lastMessage.createdTimestamp + 1800000 >= Date.now()) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nlet away = function(bot) {\r\n    return {\r\n        name: 'away',\r\n        commands: [\"away\", \"inactive\"],\r\n        isCommand: true,\r\n        private: false,\r\n        rtn: (from, message) => {\r\n            bot.setInactiveUser(from);\r\n            message = message.replace('~','').replace('pmllbot ','').replace('pmllbot','');\r\n            var away = message.split(' ')[1];\r\n            bot.setAway(from, away);\r\n            return from + ' is now away.'\r\n        }\r\n    };\r\n}\r\n"]}