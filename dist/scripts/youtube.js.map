{"version":3,"sources":["../../scripts/youtube.js"],"names":["ytdl","require","request","yt_regex","exports","youtube","bot","name","commands","isCommand","private","rtn","from","message","res","data","JSON","parse","getBody","urls","i","items","length","result","push","id","videoId","join","e","console","log","playYoutube","frm","match","searchYoutube","channel","client","channels","find","chn","type","getInfo","getYoutubeLink","error","info","sendMessage","addToQueue","connectAudio","voice_channel","then","audio","connection","catch","playNext","playMusic","video","audioStream","link","filter","voiceHandler","playStream","volume","on","msg","v","playing","once","tracks","title","current","played","queue","channel2","displayQueue","track","map","query","body","author_name"],"mappings":"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","file":"youtube.js","sourcesContent":["let ytdl = require('ytdl-core');\r\nlet request = require('sync-request');\r\nlet yt_regex = \"(?:https?:\\/\\/)?(?:youtu\\.be\\/|(?:www\\.)?youtube\\.com\\/watch(?:\\.php)?\\?.*v=)([a-zA-Z0-9\\-_]+)\";\r\n\r\nexports.youtube = function(bot) {\r\n    return {\r\n        name: 'youtube search',\r\n        commands: ['youtube', 'yt', 'video'],\r\n        isCommand: true,\r\n        private: false,\r\n        rtn: (from, message) => {\r\n            let res = request('GET', 'https://www.googleapis.com/youtube/v3/search?part=id%2Csnippet&q=' + message + '&type=video&maxResults=2&key=AIzaSyBzYm2pH-GdIPTlf4rjQ8aiE-ZB_EHKMOE');\r\n            try {\r\n                let data = JSON.parse(res.getBody());\r\n                let urls = [];\r\n                for (let i = 0; i < data.items.length; i++) {\r\n                    let result = data.items[i];\r\n                    urls.push(\"https://www.youtube.com/watch?v=\" + result.id.videoId);\r\n                }\r\n                urls = urls.join('\\n');\r\n                return urls;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexports.playYoutube = function(bot) {\r\n    return {\r\n        name: 'playYoutube',\r\n        commands: ['playYoutube', 'playYT', 'playAudio', 'play audio' ,'play'],\r\n        isCommand: true,\r\n        private: false,\r\n        rtn: (frm, message) => {\r\n            let match = message.match(yt_regex);\r\n            let id;\r\n            if (match && match[1]) {\r\n                id = match[1];\r\n            } else {\r\n                id = searchYoutube(message);\r\n            }\r\n            let channel = bot.client.channels.find(chn => chn.name === \"bot_music\" && chn.type === \"text\");\r\n            ytdl.getInfo(getYoutubeLink(id), (error, info) => {\r\n                if(error) {\r\n                    channel.sendMessage(\"The requested video (\" + match[1] + \") does not exist or cannot be played.\");\r\n                    console.log(\"Error (\" + match[1] + \"): \" + error);\r\n                } else {\r\n                    addToQueue(id, info, channel);\r\n                }\r\n            });\r\n        },\r\n        connectAudio: (bot) => {\r\n            let voice_channel = bot.client.channels.find(chn => chn.name === \"Music\" && chn.type === \"voice\");\r\n            voice_channel.join().then(connection => {\r\n                bot.audio = bot.audio || {};\r\n                bot.audio.connection = connection;\r\n            }).catch(console.error);\r\n        },\r\n        playNext: playNext\r\n\r\n    };\r\n\r\n    function playMusic(channel, video) {\r\n        let audioStream = ytdl(getYoutubeLink(video.link), {filter: 'audioonly'});\r\n        let voiceHandler = bot.audio.connection.playStream(audioStream, {volume: 0.8});\r\n        voiceHandler.on(\"debug\", msg => {console.log(msg)});\r\n        voiceHandler.on(\"error\", v=> console.log(v));\r\n        voiceHandler.on(\"start\", v => {\r\n            bot.audio.playing = true;\r\n            channel.sendMessage(\"Now Playing: \" + getYoutubeLink(video.link) + \"\\n\");\r\n        });\r\n        voiceHandler.once(\"end\", rtn => {\r\n            channel.sendMessage(\"Song stopped.\");\r\n            bot.audio.playing = playNext(channel);\r\n            voiceHandler = null;\r\n        });\r\n    }\r\n\r\n    function addToQueue(id, info, channel) {\r\n        bot.audio.tracks = bot.audio.tracks || [];\r\n        bot.audio.tracks.push({\r\n            link: id,\r\n            info: info\r\n        });\r\n        if(!bot.audio.playing) {\r\n            playNext(channel);\r\n        } else {\r\n            channel.sendMessage(\"Added to queue: \" + info.title);\r\n        }\r\n    }\r\n\r\n    function playNext(channel) {\r\n        if(bot.audio.current === null || typeof bot.audio.current === \"undefined\") {\r\n            bot.audio.current = -1;\r\n        }\r\n        if(bot.audio.tracks[bot.audio.current]) bot.audio.tracks[bot.audio.current].played = true;\r\n        if(bot.audio.tracks[bot.audio.current +1]) {\r\n            bot.audio.current = bot.audio.current + 1;\r\n            playMusic(channel, bot.audio.tracks[bot.audio.current]);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexports.playNext = (bot) => {\r\n    return {\r\n        name: 'play next song in queue',\r\n        commands: ['playnext', 'next'],\r\n        isCommand: true,\r\n        private: false,\r\n        rtn: (frm, message) => {\r\n            let channel = bot.client.channels.find(chn => chn.name === \"bot_music\" && chn.type === \"text\");\r\n            bot.commands.playYoutube.playNext(channel);\r\n        }\r\n    }\r\n};\r\n\r\nexports.queue = (bot) => {\r\n  return {\r\n      name: 'display queue',\r\n      commands: ['queue', 'whatsnext', 'showqueue', 'what\\'s next', 'whatsplaying', 'what\\'s playing'],\r\n      isCommand: true,\r\n      private: false,\r\n      rtn: () => {\r\n          let channel = bot.client.channels.find(chn => chn.name === \"bot_music\" && chn.type === \"text\");\r\n          let channel2 = bot.client.channels.find(chn => chn.name === \"bot_queue\" && chn.type === \"text\");\r\n          let queue = displayQueue(bot);\r\n          channel.sendMessage(queue);\r\n          channel2.sendMessage(queue);\r\n      }\r\n  }\r\n\r\n  function displayQueue(bot) {\r\n      if(!bot.audio.tracks) return 'There are no songs in the queue';\r\n      let queue = bot.audio.tracks.filter(track => !track.played);\r\n      queue = queue.map(track => {\r\n          let rtn = '*';\r\n          if (track.link === bot.audio.tracks[bot.audio.current].link) {\r\n              rtn += 'Now Playing: ';\r\n          }\r\n          rtn += track.info.title;\r\n          return rtn;\r\n      }).join('\\n');\r\n      return 'Current Queue: \\n'+queue;\r\n  }\r\n};\r\n\r\nfunction searchYoutube(query) {\r\n    let res = request('GET', 'https://www.googleapis.com/youtube/v3/search?part=id%2Csnippet&q=' + query + '&type=video&maxResults=2&key=AIzaSyBzYm2pH-GdIPTlf4rjQ8aiE-ZB_EHKMOE');\r\n    try {\r\n        let data = JSON.parse(res.getBody());\r\n        if (data.items.length > 0) {\r\n            return data.items[0].id.videoId;\r\n        }\r\n        return false;\r\n    } catch (e) {\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction getYoutubeLink(id) {\r\n    return \"https://www.youtube.com/watch?v=\" + id;\r\n}\r\n\r\nfunction getInfo(message) {\r\n    let res = request('GET','https://www.youtube.com/oembed?url='+message+'&format=json');\r\n    try {\r\n        let body = JSON.parse(res.getBody());\r\n        return body.title +\" by \" + body.author_name;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n"]}